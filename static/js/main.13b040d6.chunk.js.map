{"version":3,"sources":["SignIn/SignIn.js","SignUp/SignUp.js","Overlay/Overlay.js","Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","_ref","signIn","react_default","a","createElement","className","action","href","type","placeholder","SignUp","signUp","Overlay","console","log","this","props","_this$props","onClick","id","Component","Layout","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","container","document","getElementById","classList","add","remove","bind","assertThisInitialized","src_SignIn_SignIn","src_SignUp_SignUp","src_Overlay_Overlay","App","src_Layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13b040d6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport \"./SignIn.css\";\r\n\r\nconst SignIn = ({ signIn }) => {\r\n  return (\r\n    <section className=\"form-container sign-in-container\">\r\n      <form action=\"#\">\r\n        <h1>Sign in</h1>\r\n        <div className=\"social-container\">\r\n          <a href=\"#\" className=\"social\">\r\n            <i className=\"fab fa-facebook-f\" />\r\n          </a>\r\n          <a href=\"#\" className=\"social\">\r\n            <i className=\"fab fa-google-plus-g\" />\r\n          </a>\r\n          <a href=\"#\" className=\"social\">\r\n            <i className=\"fab fa-linkedin-in\" />\r\n          </a>\r\n        </div>\r\n        <span>or use your account</span>\r\n        <input type=\"email\" placeholder=\"Email\" />\r\n        <input type=\"password\" placeholder=\"Password\" />\r\n        <a href=\"#\">Forgot your password?</a>\r\n        <button >Sign In</button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./SignUp.css\";\r\n\r\nconst SignUp = ({ signUp }) => {\r\n  return (\r\n    <section className=\"form-container sign-up-container\">\r\n      <form action=\"#\">\r\n        <h1>Create Account</h1>\r\n        <div className=\"social-container\">\r\n          <a href=\"#\" className=\"social\">\r\n            <i className=\"fab fa-facebook-f\" />\r\n          </a>\r\n          <a href=\"#\" className=\"social\">\r\n            <i className=\"fab fa-google-plus-g\" />\r\n          </a>\r\n          <a href=\"#\" className=\"social\">\r\n            <i className=\"fab fa-linkedin-in\" />\r\n          </a>\r\n        </div>\r\n        <span>or use your email for registration</span>\r\n        <input type=\"text\" placeholder=\"Name\" />\r\n        <input type=\"email\" placeholder=\"Email\" />\r\n        <input type=\"password\" placeholder=\"Password\" />\r\n        <button>Sign Up</button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./Overlay.css\";\r\n\r\nclass Overlay extends Component {\r\n  render() {\r\n      console.log('this.props', this.props)\r\n    const { signIn, signUp } = this.props;\r\n    return (\r\n      <section className=\"overlay-container\">\r\n        <div className=\"overlay\">\r\n          <div className=\"overlay-panel overlay-left\">\r\n            <h1>Welcome Back!</h1>\r\n            <p>\r\n              To keep connected with us please login with your personal info\r\n            </p>\r\n            <button onClick={() => signIn()} className=\"ghost\" id=\"signIn\">\r\n              Sign In\r\n            </button>\r\n          </div>\r\n          <div className=\"overlay-panel overlay-right\">\r\n            <h1>Hello, Friend!</h1>\r\n            <p>Enter your personal details and start journey with us</p>\r\n            <button onClick={() => signUp()} className=\"ghost\" id=\"signUp\">\r\n              Sign Up\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Overlay;\r\n","import React, { Component } from \"react\";\r\n\r\nimport SignIn from \"../SignIn/SignIn\";\r\nimport SignUp from \"../SignUp/SignUp\";\r\nimport Overlay from \"../Overlay/Overlay\";\r\nimport \"./Layout.css\";\r\n\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.signUp = this.signUp.bind(this);\r\n  }\r\n\r\n  signUp = () => {\r\n     let container = document.getElementById(\"container\");\r\n    console.log(\"signUP\");\r\n    console.log(\"container :\", container);\r\n    container.classList.add(\"right-panel-active\");\r\n  };\r\n  signIn = () => {\r\n    const container = document.getElementById(\"container\");\r\n    container.classList.remove(\"right-panel-active\");\r\n    console.log(\"signIn\");\r\n  };\r\n  render() {\r\n    const { signIn, signUp } = this.props;\r\n    console.log(\"signIn\", signIn);\r\n    return (\r\n      <section className=\"container\" id=\"container\">\r\n        <SignIn  />\r\n\r\n        <SignUp  />\r\n        <Overlay signIn={this.signIn} signUp={this.signUp} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\nimport Layout from \"./Layout/Layout\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return <Layout />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}